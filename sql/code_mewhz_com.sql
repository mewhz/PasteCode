/*
SQLyog Ultimate v13.1.1 (64 bit)
MySQL - 5.7.26 : Database - code_mewhz_com
*********************************************************************
*/

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`code_mewhz_com` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `code_mewhz_com`;

/*Table structure for table `code` */

DROP TABLE IF EXISTS `code`;

CREATE TABLE `code` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `time_id` VARCHAR(765) NOT NULL,
  `text` TEXT NOT NULL,
  `type` VARCHAR(765) NOT NULL,
  `date` DATETIME NOT NULL,
  `ip` VARCHAR(255) NOT NULL,
  `user_agent` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=INNODB AUTO_INCREMENT=62 DEFAULT CHARSET=utf8;

/*Data for the table `code` */

INSERT  INTO `code`(`id`,`time_id`,`text`,`type`,`date`,`ip`,`user_agent`) VALUES 
(8,'1635176225363','package com.mewhz.paste;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        System.out.println(\"Hello World\");\r\n    }\r\n}\r\n','java','0000-00-00 00:00:00','',''),
(9,'1635176468556','package com.mewhz.paste;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        System.out.println(\"Hello World\");\r\n    }\r\n}\r\n','java','0000-00-00 00:00:00','',''),
(10,'1635176585614','package com.mewhz.paste;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        System.out.println(\"Hello World\");\r\n    }\r\n}\r\n','java','0000-00-00 00:00:00','',''),
(11,'1635176674994','package com.mewhz.paste.controller;\r\n\r\nimport org.springframework.stereotype.Controller;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RequestParam;\r\nimport org.springframework.web.bind.annotation.ResponseBody;\r\n\r\nimport java.io.File;\r\nimport java.io.FileInputStream;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.IOException;\r\n\r\n@Controller\r\npublic class HeartController {\r\n\r\n    @RequestMapping(\"heart\")\r\n    @ResponseBody\r\n    public String heart(){\r\n        return \"success\";\r\n    }\r\n}','java','0000-00-00 00:00:00','',''),
(12,'1635176691730','package com.mewhz.paste.controller;\r\n\r\n\r\nimport cn.hutool.db.Entity;\r\nimport com.mewhz.paste.utils.CodeSQL;\r\nimport org.springframework.stereotype.Controller;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RequestParam;\r\nimport org.springframework.web.bind.annotation.ResponseBody;\r\n\r\nimport java.util.List;\r\n\r\n@Controller\r\npublic class CodeController {\r\n\r\n    @RequestMapping(\"/code\")\r\n    @ResponseBody\r\n    public String code(@RequestParam String id){\r\n        String htmlFront = \"<!DOCTYPE html>\\n\" +\r\n                \"<html lang=\\\"en\\\">\\n\" +\r\n                \"<head>\\n\" +\r\n                \"    <meta charset=\\\"UTF-8\\\">\\n\" +\r\n                \"    <title>Title</title>\\n\" +\r\n                \"    <link href=\\\"css/prism.css\\\" rel=\\\"stylesheet\\\">\\n\" +\r\n                \"</head>\\n\" +\r\n                \"<body>\\n\" +\r\n                \"    <pre>\\n\" +\r\n                \"      <code class=\\\"language-\";\r\n        String type = null;\r\n        String text = null;\r\n        String htmlLast = \"      </code>\\n\" +\r\n                \"    </pre>\\n\" +\r\n                \"    <script src=\\\"js/prism.js\\\"></script>\\n\" +\r\n                \"    <script src=\\\"js/prism-c.min.js\\\"></script>\\n\" +\r\n                \"    <script src=\\\"js/prism-cpp.min.js\\\"></script>\\n\" +\r\n                \"    <script src=\\\"js/prism-java.min.js\\\"></script>\\n\" +\r\n                \"</body>\\n\" +\r\n                \"</html>\";\r\n        StringBuilder html = new StringBuilder(htmlFront);\r\n\r\n        CodeSQL codesql = new CodeSQL();\r\n        List<Entity> list = codesql.findCode(id);\r\n\r\n        type = (String) list.get(0).get(\"type\");\r\n        text = (String) list.get(0).get(\"text\");\r\n\r\n        text = text.replaceAll(\"\\n\", \"<br>\");\r\n        text = text.replaceAll(\" \", \"&nbsp;\");\r\n\r\n        html.append(type).append(\"\\\">\").append(text).append(htmlLast);\r\n\r\n        return html.toString();\r\n    }\r\n}\r\n','java','0000-00-00 00:00:00','',''),
(13,'1635176767192','package com.mewhz.paste.controller;\r\n\r\nimport com.mewhz.paste.model.Code;\r\nimport com.mewhz.paste.model.CodeHtml;\r\nimport com.mewhz.paste.utils.CodeSQL;\r\nimport com.mewhz.paste.utils.HtmlCreateUtils;\r\nimport org.springframework.stereotype.Controller;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RequestParam;\r\nimport org.springframework.web.bind.annotation.ResponseBody;\r\n\r\nimport java.io.File;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.util.Date;\r\n\r\n@Controller\r\npublic class SubmitController {\r\n\r\n    @RequestMapping(\"/submit\")\r\n//    @ResponseBody\r\n    public String code(@RequestParam String text, @RequestParam String type){\r\n        Date date = new Date();\r\n        Code code = new Code(text, type, date);\r\n        System.out.println(code);\r\n        CodeSQL codeSql = new CodeSQL();\r\n        codeSql.insertCode(code);\r\n        return \"redirect:/code?id=\" + code.getDate().getTime();\r\n    }\r\n}\r\n','java','0000-00-00 00:00:00','',''),
(14,'1635176792981','#include <bits/stdc++.h> \r\nusing namespace std;\r\ntypedef int ElemType;\r\ntypedef struct{\r\n	ElemType *data;\r\n	int length,maxSize;\r\n}List;\r\nint initSize;\r\nvoid initList(List &L){\r\n	L.data = new ElemType[initSize + 1];\r\n	L.length = 0;\r\n	L.maxSize = initSize + 1;\r\n}\r\nbool insertList(List &L, int i, ElemType &e){\r\n	if (i < 1 || i > L.maxSize)	return false;\r\n	if (L.length == L.maxSize)	return false;\r\n	for (int j = L.length; j >= i; j--)	L.data[j] = L.data[j - 1];\r\n	L.data[i - 1] = e;\r\n	L.length++;\r\n	return true;\r\n}\r\nbool getList(List &L, int i, ElemType &e){\r\n	if (i < 1 || i > L.maxSize)	return false;\r\n	if (L.length == 0)	return false;\r\n	e = L.data[i - 1];\r\n	return true;\r\n}\r\nbool insertSortList(List &L, ElemType &e){\r\n	int flag = L.length;\r\n	for (int i = 0; i < L.length; i++){\r\n		ElemType temp = L.data[i];\r\n		if (temp > e){\r\n			flag = i;\r\n			break;\r\n		}\r\n	}\r\n	// 1 2 3 7 9\r\n	// 0 1 2 3 4\r\n	for (int j = L.length; j > flag; j--)	{\r\n		L.data[j] = L.data[j - 1];\r\n		// 5 = 4;\r\n		// 4 = 3;\r\n	}\r\n	L.data[flag] = e;\r\n	L.length++;\r\n	return true;\r\n}\r\nint main(){\r\n	cin >> initSize;\r\n	List L;\r\n	initList(L);\r\n	for (int i = 1; i <= initSize; i++){\r\n		ElemType e;\r\n		cin >> e;\r\n		insertList(L, i, e);\r\n	}\r\n	ElemType e;\r\n	cin >> e;\r\n	insertSortList(L, e);\r\n	for (int i = 1; i <= L.length; i++){\r\n		ElemType e;\r\n		getList(L, i, e);\r\n		cout << e << \",\";\r\n	}\r\n	return 0;\r\n}\r\n','cpp','0000-00-00 00:00:00','',''),
(15,'1635260238855','#include <bits/stdc++.h>\r\nusing namespace std;\r\nint main(){\r\n    printf(\"Hello World\");\r\n    return 0;\r\n}','cpp','0000-00-00 00:00:00','',''),
(16,'1635260358940','#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n    printf(\"Hello World\");\r\n    return 0;\r\n}','cpp','0000-00-00 00:00:00','',''),
(17,'1635260407759','#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n    printf(\"Hello World\");\r\n    return 0;\r\n}','cpp','0000-00-00 00:00:00','',''),
(18,'1635260591389','#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n    printf(\"Hello World\");\r\n    return 0;\r\n}','cpp','0000-00-00 00:00:00','',''),
(19,'1635260633048','#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n    printf(\"Hello World\");\r\n    return 0;\r\n}','cpp','0000-00-00 00:00:00','',''),
(20,'1635260675327','#include <bits/stdc++.h>\r\nusing namespace std;\r\nint main(){\r\n    printf(\"Hello World\");\r\n    return 0;\r\n}','cpp','0000-00-00 00:00:00','',''),
(21,'1635261047625','print(\"abc\")','cpp','0000-00-00 00:00:00','',''),
(22,'1635261316528','print(\"abc\")','cpp','0000-00-00 00:00:00','',''),
(23,'1635409641523','print(\"sss\")','cpp','0000-00-00 00:00:00','',''),
(24,'1635409729520','#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <stdbool.h>\r\n\r\ntypedef struct{\r\n	int * data;\r\n}node;\r\n\r\nnode* init(){\r\n	node s;\r\n	node*a = &s;\r\n	a->data = (int*) malloc(sizeof(int) * 3);\r\n	int i;\r\n	for (i = 0; i < 3; i++){\r\n		printf(\"%p \", &a->data[i]);\r\n	}\r\n	printf(\"\\n\");\r\n	return a;\r\n}\r\n\r\nvoid push(node* a, int e){\r\n	a->data[0] = e;\r\n	a->data[1] = e + 1;\r\n	a->data[2] = e + 2;\r\n	int i;\r\n	for (i = 0; i < 3; i++){\r\n		printf(\"%p \", &a->data[i]);\r\n	}\r\n	printf(\"\\n\");\r\n}\r\n\r\nint main(){\r\n	node* a;\r\n	a = init();\r\n	push(a, 2);\r\n	push(a, 3);\r\n	int i;\r\n	for (i = 0; i < 3; i++){\r\n		printf(\"%d \", a->data[i]);\r\n	}\r\n	return 0;\r\n}','cpp','0000-00-00 00:00:00','',''),
(25,'1635409856401','栈的定义如下：\r\n\r\ntypedef int ElemType;\r\n\r\ntypedef struct\r\n{\r\n    ElemType  *base;  //指向栈的元素存储空间\r\n    int     top;      // 栈顶\r\n    int   capacity;   //  当前已分配空间，以元素为单位\r\n}Stack;\r\n\r\n写出 createStack，push, pop,top,empty,destroy函数的定义。函数声明如下：\r\n\r\nStack* createStack(void); //初始化一个空栈。空栈拥有16个元素的空间，栈顶值为 -1\r\n\r\nvoid push(Stack *pStack, ElemType x);//把 x 入栈\r\n\r\nElemType top(Stack *pStack);//返回当前栈顶元素的值\r\n\r\nvoid pop(Stack *pStack); //当前栈顶元素出栈\r\n\r\nbool empty(Stack *pStack);//如果栈空，则返回 true，否则返回 false\r\n\r\nvoid destroy(Stack *pStack);//清空分配给栈的存储空间','cpp','0000-00-00 00:00:00','',''),
(41,'1635409940447','print(\"ss\")','cpp','0000-00-00 00:00:00','',''),
(42,'1635410396208','#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    int N;\r\n    cin >> N;\r\n    for (int i = 1; i < 10000; i ++ )\r\n    {\r\n        if(i % N == 2)\r\n        {\r\n            cout << i << endl;\r\n        }\r\n    }\r\n    return 0;\r\n}','cpp','0000-00-00 00:00:00','',''),
(43,'1635410442993','\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        System.out.println(\"Hello World\");\r\n    }\r\n}\r\n','java','0000-00-00 00:00:00','',''),
(44,'1635410546567','package zzp.studentmanage.handler;\n\nimport org.apache.log4j.Logger;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport zzp.studentmanage.bean.User;\nimport zzp.studentmanage.service.UserService;\n\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpSession;\nimport java.io.UnsupportedEncodingException;\nimport java.util.Random;\n\n/**\n * 登录相关handler\n *\n * @author zhaozhipeng\n * @version 1.0\n * @date 2021/6/8\n */\n@Controller\npublic class LoginHandler {\n\n    private Logger logger = Logger.getLogger(LoginHandler.class);\n    @Autowired\n    private UserService userService;\n\n    @RequestMapping(value = \"/login\", method = RequestMethod.POST)\n    public String doLogin(@RequestParam String username, @RequestParam String password, HttpServletRequest request, HttpSession session) throws Exception {\n        logger.info(\"-----Login-----\");\n        logger.info(\"尝试登录的账户：\" + username);\n        User user = userService.login(username, password);\n        if (null != user) {\n            if (user.getZzpState() == 2) {\n                request.setAttribute(\"error\", \"<script>swal({ title: \\\"此账户已被禁用\\\", text: \\\"账户被禁用，请联系超级管理员！\\\", type: \\\"warning\\\" });</script>\");\n                return \"login\";\n            } else {\n                session.setAttribute(\"username\", user.getZzpUsername());\n                session.setAttribute(\"userid\", user.getZzpId());\n                if (user.getZzpState() == 0) {\n                    session.setAttribute(\"state\", \"超级管理员\");\n                    session.setAttribute(\"img\", user.getZzpImg());\n                    logger.info(username + \"超级管理员登录成功\");\n                    return \"admin_index\";\n                } else {\n                    session.setAttribute(\"state\", \"普通管理员\");\n                    session.setAttribute(\"img\", user.getZzpImg());\n                    logger.info(username + \"普通管理登录成功\");\n                    return \"user_index\";\n                }\n            }\n        } else {\n            request.setAttribute(\"error\", \"<script>swal({ title: \\\"登录失败\\\", text: \\\"用户名或密码不正确\\\", type: \\\"warning\\\" });</script>\");\n            return \"login\";\n        }\n    }\n\n    /**\n     * 发送验证码\n     *\n     * @param phone\n     * @param request\n     * @throws UnsupportedEncodingException\n     */\n    @RequestMapping(value = \"SendSms/{phone}\", method = RequestMethod.POST)\n    public void sendSms(@PathVariable(\"phone\") String phone, HttpServletRequest request) throws UnsupportedEncodingException {\n        // 随机产生0-9之间的4位数字验证码\n        Random r = new Random();\n        String code1 = \"\";\n        for (int i = 0; i < 6; i++) {\n            String rand = String.valueOf(r.nextInt(10));\n            code1 += rand;\n        }\n        logger.info(code1);\n        //将验证码存放到session中\n        HttpSession session = request.getSession();\n        session.removeAttribute(\"yzm\");\n        session.setAttribute(\"yzm\", code1);\n        //1.设置请求参数的编码\n        request.setCharacterEncoding(\"utf8\");\n        logger.info(phone);\n        userService.sendSms(phone, code1);\n        logger.info(\"-----发送短信-----200-----\");\n    }\n\n    /**\n     * 重置密码\n     *\n     * @param password pass  word\n     * @param code     code\n     * @param name     name\n     * @param phone    phone\n     * @param request  request\n     * @param session  session\n     * @return\n     */\n    @RequestMapping(\"sendSms\")\n    public String findPassWord(@RequestParam String name, @RequestParam String phone, @RequestParam String code, @RequestParam String password, HttpServletRequest request, HttpSession session) {\n        String yzm = (String) session.getAttribute(\"yzm\");\n        logger.info(name + \"+\" + phone + \"+\" + code + \"+\" + password + \"===200===\");\n        logger.info(\"yzm\" + yzm);\n        if (yzm == code) {\n            userService.forgetpassword(name, password);\n            request.setAttribute(\"error\", \"<script   language=\'javascript\'>alert(\'密码重置成功，请登录\');window.location.href=\'./login.jsp\';</script>\\\\\");\n            return \"login\";\n        }\n        request.setAttribute(\"error\", \"<script>alert(\'失败，请重试\');</script>\");\n        return \"redirect:/forgetpassword.jsp\";\n    }\n\n    @RequestMapping(\"logout\")\n    public String logout(HttpServletRequest request) {\n        HttpSession session = request.getSession();\n        userService.updateLastLoginTime((Integer) session.getAttribute(\"userid\"));\n        logger.info(\"更新上次登录时间与登录次数\");\n        session.removeAttribute(\"username\");\n        session.removeAttribute(\"userid\");\n        return \"redirect:/login.jsp\";\n    }\n\n    @RequestMapping(\"admin_home\")\n    public String adminHome(HttpServletRequest request) {\n        return \"admin_home\";\n    }\n}','java','0000-00-00 00:00:00','',''),
(45,'1635412872993','\r\npackage zzp.studentmanage.handler;\r\n\r\nimport org.apache.log4j.Logger;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.web.bind.annotation.PathVariable;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RequestMethod;\r\nimport org.springframework.web.bind.annotation.RequestParam;\r\nimport zzp.studentmanage.bean.User;\r\nimport zzp.studentmanage.service.UserService;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpSession;\r\nimport java.io.UnsupportedEncodingException;\r\n\r\n/**\r\n * 登录相关handler * * @author zhaozhipeng * @version 1.0 * @date 2021/6/8\r\n */\r\n@Controllerpublic\r\nclass LoginHandler {\r\n    private Logger logger = Logger.getLogger(LoginHandler.class);\r\n    @Autowired\r\n    private UserService userService;\r\n\r\n    @RequestMapping(value = \"/login\", method = RequestMethod.POST)\r\n    public String doLogin(@RequestParam String username, @RequestParam String password, HttpServletRequest request, HttpSession session) throws Exception {\r\n        logger.info(\"-----Login-----\");\r\n        logger.info(\"尝试登录的账户：\" + username);\r\n        User user = userService.login(username, password);\r\n        if (null != user) {\r\n            if (user.getZzpState() == 2) {\r\n                request.setAttribute(\"error\", \"<script>swal({ title: \\\"此账户已被禁用\\\", text: \\\"账户被禁用，请联系超级管理员！\\\", type: \\\"warning\\\" });</script>\");\r\n                return \"login\";\r\n            } else {\r\n                session.setAttribute(\"username\", user.getZzpUsername());\r\n                session.setAttribute(\"userid\", user.getZzpId());\r\n                if (user.getZzpState() == 0) {\r\n                    session.setAttribute(\"state\", \"超级管理员\");\r\n                    session.setAttribute(\"img\", user.getZzpImg());\r\n                    logger.info(username + \"超级管理员登录成功\");\r\n                    return \"admin_index\";\r\n                } else {\r\n                    session.setAttribute(\"state\", \"普通管理员\");\r\n                    session.setAttribute(\"img\", user.getZzpImg());\r\n                    logger.info(username + \"普通管理登录成功\");\r\n                    return \"user_index\";\r\n                }\r\n            }\r\n        } else {\r\n            request.setAttribute(\"error\", \"<script>swal({ title: \\\"登录失败\\\", text: \\\"用户名或密码不正确\\\", type: \\\"warning\\\" });</script>\");\r\n            return \"login\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 发送验证码     *     * @param phone     * @param request     * @throws UnsupportedEncodingException\r\n     */\r\n    @RequestMapping(value = \"SendSms/{phone}\", method = RequestMethod.POST)\r\n    public void sendSms(@PathVariable(\"phone\") String phone, HttpServletRequest request) throws UnsupportedEncodingException {        // 随机产生0-9之间的4位数字验证码        Random r = new Random();        String code1 = \"\";        for (int i = 0; i < 6; i++) {            String rand = String.valueOf(r.nextInt(10));            code1 += rand;        }        logger.info(code1);        //将验证码存放到session中        HttpSession session = request.getSession();        session.removeAttribute(\"yzm\");        session.setAttribute(\"yzm\", code1);        //1.设置请求参数的编码        request.setCharacterEncoding(\"utf8\");        logger.info(phone);        userService.sendSms(phone, code1);        logger.info(\"-----发送短信-----200-----\");    }    /**     * 重置密码     *     * @param password pass  word     * @param code     code     * @param name     name     * @param phone    phone     * @param request  request     * @param session  session     * @return     */    @RequestMapping(\"sendSms\")    public String findPassWord(@RequestParam String name, @RequestParam String phone, @RequestParam String code, @RequestParam String password, HttpServletRequest request, HttpSession session) {        String yzm = (String) session.getAttribute(\"yzm\");        logger.info(name + \"+\" + phone + \"+\" + code + \"+\" + password + \"===200===\");        logger.info(\"yzm\" + yzm);        if (yzm == code) {            userService.forgetpassword(name, password);            request.setAttribute(\"error\", \"<script   language=\'javascript\'>alert(\'密码重置成功，请登录\');window.location.href=\'./login.jsp\';</script>\\\\\");            return \"login\";        }        request.setAttribute(\"error\", \"<script>alert(\'失败，请重试\');</script>\");        return \"redirect:/forgetpassword.jsp\";    }    @RequestMapping(\"logout\")    public String logout(HttpServletRequest request) {        HttpSession session = request.getSession();        userService.updateLastLoginTime((Integer) session.getAttribute(\"userid\"));        logger.info(\"更新上次登录时间与登录次数\");        session.removeAttribute(\"username\");        session.removeAttribute(\"userid\");        return \"redirect:/login.jsp\";    }    @RequestMapping(\"admin_home\")    public String adminHome(HttpServletRequest request) {        return \"admin_home\";    }}      \r\n\r\n    ','java','0000-00-00 00:00:00','',''),
(46,'1635412937350','package com.mezzp.controller;\r\n\r\n\r\nimport com.mezzp.entity.Fruit;\r\nimport com.mezzp.service.FruitService;\r\nimport com.mezzp.vo.BarVO;\r\nimport com.mezzp.vo.PieVO;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.web.bind.annotation.*;\r\n\r\nimport java.util.List;\r\n\r\n/**\r\n * <p>\r\n * 前端控制器\r\n * </p>\r\n *\r\n * @author zhaozhipeng\r\n * @since 2021-07-31\r\n */\r\n@RestController\r\n@RequestMapping(\"//fruit\")\r\npublic class FruitController {\r\n    @Autowired\r\n    private FruitService fruitService;\r\n\r\n    /**\r\n     * 列出所有\r\n     *\r\n     * @return List<Fruit>\r\n     */\r\n    @GetMapping(\"/list\")\r\n    public List<Fruit> list() {\r\n        return this.fruitService.list();\r\n    }\r\n\r\n    /**\r\n     * 根据id删除\r\n     *\r\n     * @param id id\r\n     * @return boolean\r\n     */\r\n    @DeleteMapping(\"/delete/{id}\")\r\n    public boolean delete(@PathVariable(\"id\") Integer id) {\r\n        return this.fruitService.removeById(id);\r\n    }\r\n\r\n    /**\r\n     * 根据id查找\r\n     *\r\n     * @param id id\r\n     * @return Fruit\r\n     */\r\n    @GetMapping(\"/find/{id}\")\r\n    public Fruit findFruitById(@PathVariable(\"id\") Integer id) {\r\n        return this.fruitService.getById(id);\r\n    }\r\n\r\n    /**\r\n     * 更新数据\r\n     *\r\n     * @param fruit\r\n     * @return\r\n     */\r\n    @PutMapping(\"/update\")\r\n    public boolean updateFruit(@RequestBody Fruit fruit) {\r\n        return this.fruitService.updateById(fruit);\r\n    }\r\n\r\n    /**\r\n     * 添加数据\r\n     *\r\n     * @param fruit fruit\r\n     * @return\r\n     */\r\n    @PostMapping(\"/add\")\r\n    public boolean addFruit(@RequestBody Fruit fruit) {\r\n        return this.fruitService.save(fruit);\r\n    }\r\n\r\n    /**\r\n     * 用于柱状图\r\n     *\r\n     * @return BarVO\r\n     */\r\n    @GetMapping(\"/barVO\")\r\n    public BarVO barVo() {\r\n        return this.fruitService.barVoList();\r\n    }\r\n\r\n    /**\r\n     * 用于饼图\r\n     *\r\n     * @return\r\n     */\r\n    @GetMapping(\"/pieVO\")\r\n    public List<PieVO> pieVO() {\r\n        return this.fruitService.pieVOList();\r\n    }\r\n}\r\n','java','0000-00-00 00:00:00','',''),
(47,'1635414492605','\r\npackage zzp.studentmanage.handler;\r\n\r\nimport org.apache.log4j.Logger;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.web.bind.annotation.PathVariable;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RequestMethod;\r\nimport org.springframework.web.bind.annotation.RequestParam;\r\nimport zzp.studentmanage.bean.User;\r\nimport zzp.studentmanage.service.UserService;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpSession;\r\nimport java.io.UnsupportedEncodingException;\r\n\r\n/**\r\n * 登录相关handler * * @author zhaozhipeng * @version 1.0 * @date 2021/6/8\r\n */\r\n@Controllerpublic\r\nclass LoginHandler {\r\n    private Logger logger = Logger.getLogger(LoginHandler.class);\r\n    @Autowired\r\n    private UserService userService;\r\n\r\n    @RequestMapping(value = \"/login\", method = RequestMethod.POST)\r\n    public String doLogin(@RequestParam String username, @RequestParam String password, HttpServletRequest request, HttpSession session) throws Exception {\r\n        logger.info(\"-----Login-----\");\r\n        logger.info(\"尝试登录的账户：\" + username);\r\n        User user = userService.login(username, password);\r\n        if (null != user) {\r\n            if (user.getZzpState() == 2) {\r\n                request.setAttribute(\"error\", \"<script>swal({ title: \\\"此账户已被禁用\\\", text: \\\"账户被禁用，请联系超级管理员！\\\", type: \\\"warning\\\" });</script>\");\r\n                return \"login\";\r\n            } else {\r\n                session.setAttribute(\"username\", user.getZzpUsername());\r\n                session.setAttribute(\"userid\", user.getZzpId());\r\n                if (user.getZzpState() == 0) {\r\n                    session.setAttribute(\"state\", \"超级管理员\");\r\n                    session.setAttribute(\"img\", user.getZzpImg());\r\n                    logger.info(username + \"超级管理员登录成功\");\r\n                    return \"admin_index\";\r\n                } else {\r\n                    session.setAttribute(\"state\", \"普通管理员\");\r\n                    session.setAttribute(\"img\", user.getZzpImg());\r\n                    logger.info(username + \"普通管理登录成功\");\r\n                    return \"user_index\";\r\n                }\r\n            }\r\n        } else {\r\n            request.setAttribute(\"error\", \"<script>swal({ title: \\\"登录失败\\\", text: \\\"用户名或密码不正确\\\", type: \\\"warning\\\" });</script>\");\r\n            return \"login\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 发送验证码     *     * @param phone     * @param request     * @throws UnsupportedEncodingException\r\n     */\r\n    @RequestMapping(value = \"SendSms/{phone}\", method = RequestMethod.POST)\r\n    public void sendSms(@PathVariable(\"phone\") String phone, HttpServletRequest request) throws UnsupportedEncodingException {        // 随机产生0-9之间的4位数字验证码        Random r = new Random();        String code1 = \"\";        for (int i = 0; i < 6; i++) {            String rand = String.valueOf(r.nextInt(10));            code1 += rand;        }        logger.info(code1);        //将验证码存放到session中        HttpSession session = request.getSession();        session.removeAttribute(\"yzm\");        session.setAttribute(\"yzm\", code1);        //1.设置请求参数的编码        request.setCharacterEncoding(\"utf8\");        logger.info(phone);        userService.sendSms(phone, code1);        logger.info(\"-----发送短信-----200-----\");    }    /**     * 重置密码     *     * @param password pass  word     * @param code     code     * @param name     name     * @param phone    phone     * @param request  request     * @param session  session     * @return     */    @RequestMapping(\"sendSms\")    public String findPassWord(@RequestParam String name, @RequestParam String phone, @RequestParam String code, @RequestParam String password, HttpServletRequest request, HttpSession session) {        String yzm = (String) session.getAttribute(\"yzm\");        logger.info(name + \"+\" + phone + \"+\" + code + \"+\" + password + \"===200===\");        logger.info(\"yzm\" + yzm);        if (yzm == code) {            userService.forgetpassword(name, password);            request.setAttribute(\"error\", \"<script   language=\'javascript\'>alert(\'密码重置成功，请登录\');window.location.href=\'./login.jsp\';</script>\\\\\");            return \"login\";        }        request.setAttribute(\"error\", \"<script>alert(\'失败，请重试\');</script>\");        return \"redirect:/forgetpassword.jsp\";    }    @RequestMapping(\"logout\")    public String logout(HttpServletRequest request) {        HttpSession session = request.getSession();        userService.updateLastLoginTime((Integer) session.getAttribute(\"userid\"));        logger.info(\"更新上次登录时间与登录次数\");        session.removeAttribute(\"username\");        session.removeAttribute(\"userid\");        return \"redirect:/login.jsp\";    }    @RequestMapping(\"admin_home\")    public String adminHome(HttpServletRequest request) {        return \"admin_home\";    }}\r\n\r\n    ','cpp','0000-00-00 00:00:00','',''),
(48,'1635414502324','','java','0000-00-00 00:00:00','',''),
(49,'1635414551180','\r\npackage zzp.studentmanage.handler;\r\n\r\nimport org.apache.log4j.Logger;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.web.bind.annotation.PathVariable;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RequestMethod;\r\nimport org.springframework.web.bind.annotation.RequestParam;\r\nimport zzp.studentmanage.bean.User;\r\nimport zzp.studentmanage.service.UserService;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpSession;\r\nimport java.io.UnsupportedEncodingException;\r\n\r\n/**\r\n * 登录相关handler * * @author zhaozhipeng * @version 1.0 * @date 2021/6/8\r\n */\r\n@Controllerpublic\r\nclass LoginHandler {\r\n    private Logger logger = Logger.getLogger(LoginHandler.class);\r\n    @Autowired\r\n    private UserService userService;\r\n\r\n    @RequestMapping(value = \"/login\", method = RequestMethod.POST)\r\n    public String doLogin(@RequestParam String username, @RequestParam String password, HttpServletRequest request, HttpSession session) throws Exception {\r\n        logger.info(\"-----Login-----\");\r\n        logger.info(\"尝试登录的账户：\" + username);\r\n        User user = userService.login(username, password);\r\n        if (null != user) {\r\n            if (user.getZzpState() == 2) {\r\n                request.setAttribute(\"error\", \"<script>swal({ title: \\\"此账户已被禁用\\\", text: \\\"账户被禁用，请联系超级管理员！\\\", type: \\\"warning\\\" });</script>\");\r\n                return \"login\";\r\n            } else {\r\n                session.setAttribute(\"username\", user.getZzpUsername());\r\n                session.setAttribute(\"userid\", user.getZzpId());\r\n                if (user.getZzpState() == 0) {\r\n                    session.setAttribute(\"state\", \"超级管理员\");\r\n                    session.setAttribute(\"img\", user.getZzpImg());\r\n                    logger.info(username + \"超级管理员登录成功\");\r\n                    return \"admin_index\";\r\n                } else {\r\n                    session.setAttribute(\"state\", \"普通管理员\");\r\n                    session.setAttribute(\"img\", user.getZzpImg());\r\n                    logger.info(username + \"普通管理登录成功\");\r\n                    return \"user_index\";\r\n                }\r\n            }\r\n        } else {\r\n            request.setAttribute(\"error\", \"<script>swal({ title: \\\"登录失败\\\", text: \\\"用户名或密码不正确\\\", type: \\\"warning\\\" });</script>\");\r\n            return \"login\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 发送验证码     *     * @param phone     * @param request     * @throws UnsupportedEncodingException\r\n     */\r\n    @RequestMapping(value = \"SendSms/{phone}\", method = RequestMethod.POST)\r\n    public void sendSms(@PathVariable(\"phone\") String phone, HttpServletRequest request) throws UnsupportedEncodingException {        // 随机产生0-9之间的4位数字验证码        Random r = new Random();        String code1 = \"\";        for (int i = 0; i < 6; i++) {            String rand = String.valueOf(r.nextInt(10));            code1 += rand;        }        logger.info(code1);        //将验证码存放到session中        HttpSession session = request.getSession();        session.removeAttribute(\"yzm\");        session.setAttribute(\"yzm\", code1);        //1.设置请求参数的编码        request.setCharacterEncoding(\"utf8\");        logger.info(phone);        userService.sendSms(phone, code1);        logger.info(\"-----发送短信-----200-----\");    }    /**     * 重置密码     *     * @param password pass  word     * @param code     code     * @param name     name     * @param phone    phone     * @param request  request     * @param session  session     * @return     */    @RequestMapping(\"sendSms\")    public String findPassWord(@RequestParam String name, @RequestParam String phone, @RequestParam String code, @RequestParam String password, HttpServletRequest request, HttpSession session) {        String yzm = (String) session.getAttribute(\"yzm\");        logger.info(name + \"+\" + phone + \"+\" + code + \"+\" + password + \"===200===\");        logger.info(\"yzm\" + yzm);        if (yzm == code) {            userService.forgetpassword(name, password);            request.setAttribute(\"error\", \"<script   language=\'javascript\'>alert(\'密码重置成功，请登录\');window.location.href=\'./login.jsp\';</script>\\\\\");            return \"login\";        }        request.setAttribute(\"error\", \"<script>alert(\'失败，请重试\');</script>\");        return \"redirect:/forgetpassword.jsp\";    }    @RequestMapping(\"logout\")    public String logout(HttpServletRequest request) {        HttpSession session = request.getSession();        userService.updateLastLoginTime((Integer) session.getAttribute(\"userid\"));        logger.info(\"更新上次登录时间与登录次数\");        session.removeAttribute(\"username\");        session.removeAttribute(\"userid\");        return \"redirect:/login.jsp\";    }    @RequestMapping(\"admin_home\")    public String adminHome(HttpServletRequest request) {        return \"admin_home\";    }}\r\n\r\n    ','java','0000-00-00 00:00:00','',''),
(50,'1635414822897','','cpp','0000-00-00 00:00:00','',''),
(51,'1635573799159','print(\"Hello World\")','cpp','0000-00-00 00:00:00','',''),
(52,'1635574007068','/*\r\n#include <iostream>\r\n#define OK 1\r\n#define ERROR 0\r\n#define MAXSIZE 20005\r\nusing namespace std;\r\ntypedef int SElemType;\r\ntypedef int Status;\r\ntypedef struct {\r\n	SElemType *base;\r\n	SElemType *top;\r\n	int stackSize;\r\n} Stack;\r\nStatus initStack(Stack &S) {\r\n	S.base = new SElemType[MAXSIZE];\r\n	S.top = S.base;\r\n	S.stackSize = MAXSIZE;\r\n	return OK;\r\n}\r\nStatus push(Stack &S, SElemType e) {\r\n	if (S.top - S.base == S.stackSize)	return ERROR;\r\n	*S.top++ = e;\r\n	return OK;\r\n}\r\nStatus pop(Stack &S, SElemType &e) {\r\n	if (S.top == S.base)	return ERROR;\r\n	e = *--S.top;\r\n	return OK;\r\n}\r\nSElemType getTop(Stack S) {\r\n	return *(S.top - 1);\r\n}\r\nint main() {\r\n	int n;\r\n	cin >> n;\r\n	Stack S;\r\n	initStack(S);\r\n	for (int i = 0; i < n; i++) {\r\n		int operate;\r\n		cin >> operate;\r\n		if (operate == 1) {\r\n			SElemType e;\r\n			cin >> e;\r\n			push(S, e);\r\n		} else {\r\n			SElemType e;\r\n			Status flag = pop(S, e);\r\n			if (flag == OK)	cout << e << endl;\r\n			else	cout << \"invalid\" << endl;\r\n		}\r\n	}\r\n	return 0;\r\n}\r\n*/\r\n#include <iostream>\r\n#define OK 1\r\n#define ERROR 0\r\nusing namespace std;\r\ntypedef int Status;\r\ntypedef int ElemType;\r\ntypedef struct StackNode{\r\n	ElemType data;\r\n	struct StackNode * next;\r\n}StackNode, *LinkStack;\r\nStatus initStack(LinkStack &S){\r\n	S = NULL;\r\n	return OK;\r\n}\r\nStatus push(LinkStack &S, ElemType e){\r\n	StackNode *p = new StackNode;\r\n	p->data = e;\r\n	p->next = S;\r\n	S = p;\r\n	return OK;\r\n}\r\nStatus pop(LinkStack &S, ElemType &e){\r\n	if (S == NULL)	return ERROR;\r\n	e = S->data;\r\n	StackNode *q = S;\r\n	S = S->next;\r\n	delete q;\r\n	return OK;\r\n}\r\nElemType getTop(LinkStack S){\r\n	return S->data;\r\n}\r\nint main(){\r\n	int n;\r\n	cin >> n;\r\n	LinkStack S;\r\n	initStack(S);\r\n	ElemType e;\r\n	int operate;\r\n	for (int i = 0; i < n; i++){\r\n		cin >> operate;\r\n		if (operate == 1){\r\n			cin >> e;\r\n			push(S, e);\r\n		}\r\n		else{\r\n			Status flag = pop(S, e);\r\n			if (flag == ERROR)	cout << \"invalid\" << endl;\r\n			else	cout << e << endl;\r\n		}\r\n	}\r\n	return 0;\r\n}','cpp','2021-10-30 00:00:00','',''),
(53,'1635574074370','/*\r\n#include <iostream>\r\n#define OK 1\r\n#define ERROR 0\r\n#define MAXSIZE 20005\r\nusing namespace std;\r\ntypedef int SElemType;\r\ntypedef int Status;\r\ntypedef struct {\r\n	SElemType *base;\r\n	SElemType *top;\r\n	int stackSize;\r\n} Stack;\r\nStatus initStack(Stack &S) {\r\n	S.base = new SElemType[MAXSIZE];\r\n	S.top = S.base;\r\n	S.stackSize = MAXSIZE;\r\n	return OK;\r\n}\r\nStatus push(Stack &S, SElemType e) {\r\n	if (S.top - S.base == S.stackSize)	return ERROR;\r\n	*S.top++ = e;\r\n	return OK;\r\n}\r\nStatus pop(Stack &S, SElemType &e) {\r\n	if (S.top == S.base)	return ERROR;\r\n	e = *--S.top;\r\n	return OK;\r\n}\r\nSElemType getTop(Stack S) {\r\n	return *(S.top - 1);\r\n}\r\nint main() {\r\n	int n;\r\n	cin >> n;\r\n	Stack S;\r\n	initStack(S);\r\n	for (int i = 0; i < n; i++) {\r\n		int operate;\r\n		cin >> operate;\r\n		if (operate == 1) {\r\n			SElemType e;\r\n			cin >> e;\r\n			push(S, e);\r\n		} else {\r\n			SElemType e;\r\n			Status flag = pop(S, e);\r\n			if (flag == OK)	cout << e << endl;\r\n			else	cout << \"invalid\" << endl;\r\n		}\r\n	}\r\n	return 0;\r\n}\r\n*/\r\n#include <iostream>\r\n#define OK 1\r\n#define ERROR 0\r\nusing namespace std;\r\ntypedef int Status;\r\ntypedef int ElemType;\r\ntypedef struct StackNode{\r\n	ElemType data;\r\n	struct StackNode * next;\r\n}StackNode, *LinkStack;\r\nStatus initStack(LinkStack &S){\r\n	S = NULL;\r\n	return OK;\r\n}\r\nStatus push(LinkStack &S, ElemType e){\r\n	StackNode *p = new StackNode;\r\n	p->data = e;\r\n	p->next = S;\r\n	S = p;\r\n	return OK;\r\n}\r\nStatus pop(LinkStack &S, ElemType &e){\r\n	if (S == NULL)	return ERROR;\r\n	e = S->data;\r\n	StackNode *q = S;\r\n	S = S->next;\r\n	delete q;\r\n	return OK;\r\n}\r\nElemType getTop(LinkStack S){\r\n	return S->data;\r\n}\r\nint main(){\r\n	int n;\r\n	cin >> n;\r\n	LinkStack S;\r\n	initStack(S);\r\n	ElemType e;\r\n	int operate;\r\n	for (int i = 0; i < n; i++){\r\n		cin >> operate;\r\n		if (operate == 1){\r\n			cin >> e;\r\n			push(S, e);\r\n		}\r\n		else{\r\n			Status flag = pop(S, e);\r\n			if (flag == ERROR)	cout << \"invalid\" << endl;\r\n			else	cout << e << endl;\r\n		}\r\n	}\r\n	return 0;\r\n}','cpp','2021-10-30 14:07:54','',''),
(54,'1635575010779','123','cpp','2021-10-30 14:23:31','',''),
(55,'1635578220476','aaa','cpp','2021-10-30 15:17:00','192.168.19.1','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0'),
(56,'1635579995860','123','cpp','2021-10-30 15:46:36','192.168.19.1','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0'),
(57,'1636080610424','package com.mewhz.paste.model;\r\n\r\nimport java.util.Date;\r\n\r\npublic class Code {\r\n    private int id;\r\n    private String text;\r\n    private String type;\r\n    private Date date;\r\n    private String ip;\r\n    private String userAgent;\r\n    public Code() {\r\n\r\n    }\r\n\r\n    public Code(int id, String text, String type, Date date, String ip, String userAgent) {\r\n        this.id = id;\r\n        this.text = text;\r\n        this.type = type;\r\n        this.date = date;\r\n        this.ip = ip;\r\n        this.userAgent = userAgent;\r\n    }\r\n\r\n    public Code(String text, String type, Date date, String ip, String userAgent) {\r\n        this.text = text;\r\n        this.type = type;\r\n        this.date = date;\r\n        this.ip = ip;\r\n        this.userAgent = userAgent;\r\n    }\r\n\r\n    public int getId() {\r\n        return id;\r\n    }\r\n\r\n    public void setId(int id) {\r\n        this.id = id;\r\n    }\r\n\r\n    public String getText() {\r\n        return text;\r\n    }\r\n\r\n    public void setText(String text) {\r\n        this.text = text;\r\n    }\r\n\r\n    public String getType() {\r\n        return type;\r\n    }\r\n\r\n    public void setType(String type) {\r\n        this.type = type;\r\n    }\r\n\r\n    public Date getDate() {\r\n        return date;\r\n    }\r\n\r\n    public void setDate(Date date) {\r\n        this.date = date;\r\n    }\r\n\r\n    public String getIp() {\r\n        return ip;\r\n    }\r\n\r\n    public void setIp(String ip) {\r\n        this.ip = ip;\r\n    }\r\n\r\n    public String getUserAgent() {\r\n        return userAgent;\r\n    }\r\n\r\n    public void setUserAgent(String userAgent) {\r\n        this.userAgent = userAgent;\r\n    }\r\n}\r\n','java','2021-11-05 10:50:10','192.168.19.1','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0'),
(58,'1636080699914','package com.mewhz.paste.model;\r\n\r\nimport java.util.Date;\r\n\r\npublic class Code {\r\n    private int id;\r\n    private String text;\r\n    private String type;\r\n    private Date date;\r\n    private String ip;\r\n    private String userAgent;\r\n    public Code() {\r\n\r\n    }\r\n\r\n    public Code(int id, String text, String type, Date date, String ip, String userAgent) {\r\n        this.id = id;\r\n        this.text = text;\r\n        this.type = type;\r\n        this.date = date;\r\n        this.ip = ip;\r\n        this.userAgent = userAgent;\r\n    }\r\n\r\n    public Code(String text, String type, Date date, String ip, String userAgent) {\r\n        this.text = text;\r\n        this.type = type;\r\n        this.date = date;\r\n        this.ip = ip;\r\n        this.userAgent = userAgent;\r\n    }\r\n\r\n    public int getId() {\r\n        return id;\r\n    }\r\n\r\n    public void setId(int id) {\r\n        this.id = id;\r\n    }\r\n\r\n    public String getText() {\r\n        return text;\r\n    }\r\n\r\n    public void setText(String text) {\r\n        this.text = text;\r\n    }\r\n\r\n    public String getType() {\r\n        return type;\r\n    }\r\n\r\n    public void setType(String type) {\r\n        this.type = type;\r\n    }\r\n\r\n    public Date getDate() {\r\n        return date;\r\n    }\r\n\r\n    public void setDate(Date date) {\r\n        this.date = date;\r\n    }\r\n\r\n    public String getIp() {\r\n        return ip;\r\n    }\r\n\r\n    public void setIp(String ip) {\r\n        this.ip = ip;\r\n    }\r\n\r\n    public String getUserAgent() {\r\n        return userAgent;\r\n    }\r\n\r\n    public void setUserAgent(String userAgent) {\r\n        this.userAgent = userAgent;\r\n    }\r\n}\r\n','java','2021-11-05 10:51:40','192.168.19.1','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0'),
(59,'1636080716119','package com.mewhz.paste.model;\r\n\r\n/**\r\n * @author mewhz\r\n */\r\npublic class IdentifyingCode {\r\n    private int icId;\r\n    private String identifying;\r\n    private String timeId;\r\n\r\n    public IdentifyingCode(){\r\n\r\n    }\r\n\r\n    public IdentifyingCode(String identifying){\r\n        this.identifying = identifying;\r\n    }\r\n\r\n    public IdentifyingCode(String identifying, String timeId) {\r\n        this.identifying = identifying;\r\n        this.timeId = timeId;\r\n    }\r\n\r\n    public IdentifyingCode(int icId, String identifying, String timeId) {\r\n        this.icId = icId;\r\n        this.identifying = identifying;\r\n        this.timeId = timeId;\r\n    }\r\n\r\n    public int getIcId() {\r\n        return icId;\r\n    }\r\n\r\n    public void setIcId(int icId) {\r\n        this.icId = icId;\r\n    }\r\n\r\n    public String getIdentifying() {\r\n        return identifying;\r\n    }\r\n\r\n    public void setIdentifying(String identifying) {\r\n        this.identifying = identifying;\r\n    }\r\n\r\n    public String getTimeId() {\r\n        return timeId;\r\n    }\r\n\r\n    public void setTimeId(String timeId) {\r\n        this.timeId = timeId;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"IdentifyingCode{\" +\r\n                \"icId=\" + icId +\r\n                \", identifying=\'\" + identifying + \'\\\'\' +\r\n                \", timeId=\'\" + timeId + \'\\\'\' +\r\n                \'}\';\r\n    }\r\n}\r\n','java','2021-11-05 10:51:56','192.168.19.1','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0'),
(60,'1636080772897','//https://www.luogu.com.cn/problem/P1328\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\nconst int N = 205;\r\nint score[5][5] = {{0,0,1,1,0},{1,0,0,1,0},{0,1,0,0,1},{0,0,1,0,1},{1,1,0,0,0}};\r\nint a,b,n;\r\nint na[N],nb[N];\r\nint main(){\r\n	scanf(\"%d%d%d\", &n,&a,&b);\r\n	int A = 0, B = 0;\r\n	for (int i = 0; i < a; i++)	scanf(\"%d\", &na[i]);\r\n	for (int i = 0; i < b; i++)	scanf(\"%d\", &nb[i]);\r\n	for (int i = 0; i < n; i++){\r\n		A += score[na[i % a]][nb[i % b]];\r\n		B += score[nb[i % b]][na[i % a]];\r\n	}\r\n	cout << A << \" \" << B;\r\n	return 0;\r\n}','cpp','2021-11-05 10:52:53','192.168.19.1','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0'),
(61,'1636080781867','//https://www.luogu.com.cn/problem/P1328\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\nconst int N = 205;\r\nint score[5][5] = {{0,0,1,1,0},{1,0,0,1,0},{0,1,0,0,1},{0,0,1,0,1},{1,1,0,0,0}};\r\nint a,b,n;\r\nint na[N],nb[N];\r\nint main(){\r\n	scanf(\"%d%d%d\", &n,&a,&b);\r\n	int A = 0, B = 0;\r\n	for (int i = 0; i < a; i++)	scanf(\"%d\", &na[i]);\r\n	for (int i = 0; i < b; i++)	scanf(\"%d\", &nb[i]);\r\n	for (int i = 0; i < n; i++){\r\n		A += score[na[i % a]][nb[i % b]];\r\n		B += score[nb[i % b]][na[i % a]];\r\n	}\r\n	cout << A << \" \" << B;\r\n	return 0;\r\n}','cpp','2021-11-05 10:53:02','192.168.19.1','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0');

/*Table structure for table `identifying_code` */

DROP TABLE IF EXISTS `identifying_code`;

CREATE TABLE `identifying_code` (
  `ic_id` INT(11) NOT NULL AUTO_INCREMENT,
  `identifying` VARCHAR(255) NOT NULL,
  `time_id` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`ic_id`)
) ENGINE=INNODB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

/*Data for the table `identifying_code` */

INSERT  INTO `identifying_code`(`ic_id`,`identifying`,`time_id`) VALUES 
(1,'6666','1636080699914'),
(2,'6666','1636080716119'),
(3,'6666','1636080772897'),
(4,'mewhz','1636080781867');

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
